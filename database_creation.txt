DROP TABLE Piece_Dossier;
DROP TABLE Candidature;
DROP TABLE Offre_Emploi;
DROP TABLE Fiche_Poste;
DROP TABLE Recruteur;
DROP TABLE Candidat;
DROP TABLE Administrateur;
DROP TABLE Utilisateur;
DROP TABLE Organisation;
DROP TABLE Statut_Poste;
DROP TABLE Etat_Offre;
DROP TABLE Adresse;
DROP TABLE Type_Organisation;
DROP TABLE Type_Metier;



CREATE TABLE IF NOT EXISTS Type_Organisation (
    nom VARCHAR(100) PRIMARY KEY
);

CREATE TABLE IF NOT EXISTS Adresse (
    id_lieu INTEGER AUTO_INCREMENT PRIMARY KEY,
    num INTEGER,
    rue VARCHAR(100),
    ville VARCHAR(100),
    code_postal VARCHAR(10)
);
    
CREATE TABLE IF NOT EXISTS Organisation (
    siren INTEGER PRIMARY KEY,
    nom VARCHAR(100),
    siege_social INTEGER,
    type VARCHAR(100),
    logo VARCHAR(100),
    FOREIGN KEY (siege_social) REFERENCES Adresse (id_lieu),
    FOREIGN KEY (type) REFERENCES Type_Organisation (nom)
);

CREATE TABLE IF NOT EXISTS Etat_Offre (
    etat VARCHAR(30) PRIMARY KEY
);

CREATE TABLE IF NOT EXISTS Statut_Poste (
    statut VARCHAR(30) PRIMARY KEY
);

CREATE TABLE IF NOT EXISTS Type_Metier (
    type VARCHAR(30) PRIMARY KEY
);

CREATE TABLE IF NOT EXISTS Utilisateur (
    id_utilisateur INTEGER AUTO_INCREMENT PRIMARY KEY,
    email VARCHAR(100),
    nom VARCHAR(30),
    prenom VARCHAR(30),
    num_tel VARCHAR(15),
    date_creation DATETIME,
    last_login DATETIME,
    statut BOOLEAN,
    password VARCHAR(100)
);

CREATE TABLE IF NOT EXISTS Candidat (
    id_candidat INTEGER PRIMARY KEY,
    FOREIGN KEY (id_candidat) REFERENCES Utilisateur (id_utilisateur)
);

CREATE TABLE IF NOT EXISTS Recruteur (
    id_recruteur INTEGER PRIMARY KEY,
    organisation INTEGER,
    FOREIGN KEY (id_recruteur) REFERENCES Utilisateur (id_utilisateur),
    FOREIGN KEY (organisation) REFERENCES Organisation (siren)
);

CREATE TABLE IF NOT EXISTS Administrateur (
    id_administrateur INTEGER PRIMARY KEY,
    FOREIGN KEY (id_administrateur) REFERENCES Utilisateur (id_utilisateur)
);    

CREATE TABLE IF NOT EXISTS Fiche_Poste (
    id_fiche INTEGER AUTO_INCREMENT PRIMARY KEY,
    intitule VARCHAR(100),
    resp_hierarchique VARCHAR(100),
    rythme_travail DECIMAL(4,2),
    teletravail BOOLEAN,
    salaire_min FLOAT,
    salaire_max FLOAT,
    description TEXT,
    type VARCHAR(30),
    statut VARCHAR(30),
    lieu INTEGER,
    organisation INTEGER,
    recruteur INTEGER,
    FOREIGN KEY (type) REFERENCES Type_Metier (type),
    FOREIGN KEY (statut) REFERENCES Statut_Poste (statut),
    FOREIGN KEY (lieu) REFERENCES Adresse (id_lieu),
    FOREIGN KEY (organisation) REFERENCES Organisation (siren),
    FOREIGN KEY (recruteur) REFERENCES Recruteur (id_recruteur)
);

CREATE TABLE IF NOT EXISTS Offre_Emploi (
    num INTEGER PRIMARY KEY,
    date_validite DATETIME,
    indications TEXT,
    fiche INTEGER,
    etat VARCHAR(30),
    FOREIGN KEY (fiche) REFERENCES Fiche_Poste (id_fiche),
    FOREIGN KEY (etat) REFERENCES Etat_Offre (etat)
);

CREATE TABLE IF NOT EXISTS Candidature (
    id_c INTEGER AUTO_INCREMENT PRIMARY KEY,
    date_candidature DATETIME,
    offre INTEGER,
    candidat INTEGER,
    FOREIGN KEY (offre) REFERENCES Offre_Emploi (num),
    FOREIGN KEY (candidat) REFERENCES Candidat (id_candidat)
);

CREATE TABLE IF NOT EXISTS Piece_Dossier (
    id_piece INTEGER AUTO_INCREMENT PRIMARY KEY,
    type VARCHAR(100),
    candidature INTEGER,
    fichier VARCHAR(100),
    FOREIGN KEY (candidature) REFERENCES Candidature (id_c)
);