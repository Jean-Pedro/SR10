DROP TABLE Piece_Dossier;
DROP TABLE Candidature;
DROP TABLE Offre_Emploi;
DROP TABLE Fiche_Poste;
DROP TABLE Recruteur;
DROP TABLE Candidat;
DROP TABLE Administrateur;
DROP TABLE Utilisateur;
DROP TABLE Organisation;
DROP TABLE Statut_Poste;
DROP TABLE Etat_Offre;
DROP TABLE Adresse;
DROP TABLE Type_Organisation;
DROP TABLE Type_Metier;
DROP TABLE Etat_demande;



CREATE TABLE IF NOT EXISTS Type_Organisation (
    nom VARCHAR(100) PRIMARY KEY
);

CREATE TABLE IF NOT EXISTS Adresse (
    id_lieu INTEGER AUTO_INCREMENT PRIMARY KEY,
    num INTEGER NOT NULL,
    rue VARCHAR(100) NOT NULL,
    ville VARCHAR(100) NOT NULL,
    code_postal VARCHAR(10) NOT NULL
);

CREATE TABLE IF NOT EXISTS Etat_demande (
    demande VARCHAR(30) PRIMARY KEY
);
    
CREATE TABLE IF NOT EXISTS Organisation (
    siren INTEGER PRIMARY KEY,
    nom VARCHAR(100) NOT NULL,
    siege_social INTEGER NOT NULL,
    type VARCHAR(100) NOT NULL,
    logo VARCHAR(100) NOT NULL,
    etat_demande VARCHAR(30) NOT NULL,
    FOREIGN KEY (siege_social) REFERENCES Adresse (id_lieu),
    FOREIGN KEY (type) REFERENCES Type_Organisation (nom),
    FOREIGN KEY (etat_demande) REFERENCES Etat_demande (demande)
);

CREATE TABLE IF NOT EXISTS Etat_Offre (
    etat VARCHAR(30) PRIMARY KEY
);

CREATE TABLE IF NOT EXISTS Statut_Poste (
    statut VARCHAR(30) PRIMARY KEY
);

CREATE TABLE IF NOT EXISTS Type_Metier (
    type VARCHAR(30) PRIMARY KEY
);

CREATE TABLE IF NOT EXISTS Utilisateur (
    id_utilisateur INTEGER AUTO_INCREMENT PRIMARY KEY,
    email VARCHAR(100) UNIQUE NOT NULL,
    nom VARCHAR(30) NOT NULL,
    prenom VARCHAR(30) NOT NULL,
    num_tel VARCHAR(15) UNIQUE NOT NULL,
    date_creation DATETIME NOT NULL,
    last_login DATETIME NOT NULL,
    statut BOOLEAN NOT NULL,
    password VARCHAR(100) NOT NULL
);

CREATE TABLE IF NOT EXISTS Candidat (
    id_candidat INTEGER PRIMARY KEY,
    FOREIGN KEY (id_candidat) REFERENCES Utilisateur (id_utilisateur)
);

CREATE TABLE IF NOT EXISTS Recruteur (
    id_recruteur INTEGER PRIMARY KEY,
    organisation INTEGER NOT NULL,
    etat_demande VARCHAR(30) NOT NULL,
    FOREIGN KEY (id_recruteur) REFERENCES Utilisateur (id_utilisateur),
    FOREIGN KEY (organisation) REFERENCES Organisation (siren),
    FOREIGN KEY (etat_demande) REFERENCES Etat_demande (demande)
);

CREATE TABLE IF NOT EXISTS Administrateur (
    id_administrateur INTEGER PRIMARY KEY,
    FOREIGN KEY (id_administrateur) REFERENCES Utilisateur (id_utilisateur)
);    

CREATE TABLE IF NOT EXISTS Fiche_Poste (
    id_fiche INTEGER AUTO_INCREMENT PRIMARY KEY,
    intitule VARCHAR(100) NOT NULL,
    resp_hierarchique VARCHAR(100) NOT NULL,
    rythme_travail DECIMAL(4,2) NOT NULL,
    teletravail BOOLEAN NOT NULL,
    salaire_min FLOAT NOT NULL,
    salaire_max FLOAT NOT NULL,
    description TEXT NOT NULL,
    type VARCHAR(30) NOT NULL,
    statut VARCHAR(30) NOT NULL,
    lieu INTEGER NOT NULL,
    organisation INTEGER NOT NULL,
    recruteur INTEGER NOT NULL,
    FOREIGN KEY (type) REFERENCES Type_Metier (type),
    FOREIGN KEY (statut) REFERENCES Statut_Poste (statut),
    FOREIGN KEY (lieu) REFERENCES Adresse (id_lieu),
    FOREIGN KEY (organisation) REFERENCES Organisation (siren),
    FOREIGN KEY (recruteur) REFERENCES Recruteur (id_recruteur)
);

CREATE TABLE IF NOT EXISTS Offre_Emploi (
    num INTEGER PRIMARY KEY,
    date_validite DATETIME NOT NULL,
    indications TEXT NOT NULL,
    fiche INTEGER NOT NULL,
    etat VARCHAR(30) NOT NULL,
    date_depot DATETIME NOT NULL,
    FOREIGN KEY (fiche) REFERENCES Fiche_Poste (id_fiche),
    FOREIGN KEY (etat) REFERENCES Etat_Offre (etat)
);

CREATE TABLE IF NOT EXISTS Candidature (
    id_c INTEGER AUTO_INCREMENT PRIMARY KEY,
    date_candidature DATETIME NOT NULL,
    offre INTEGER NOT NULL,
    candidat INTEGER NOT NULL,
    FOREIGN KEY (offre) REFERENCES Offre_Emploi (num),
    FOREIGN KEY (candidat) REFERENCES Candidat (id_candidat)
);

CREATE TABLE IF NOT EXISTS Piece_Dossier (
    id_piece INTEGER AUTO_INCREMENT PRIMARY KEY,
    type VARCHAR(100) NOT NULL,
    candidature INTEGER NOT NULL,
    fichier VARCHAR(100) NOT NULL,
    FOREIGN KEY (candidature) REFERENCES Candidature (id_c)
);